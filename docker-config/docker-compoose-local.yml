version: '3'
services:
  nodejs:
    build:
      context: .
      dockerfile: ../back/dockerfile
    image: be-app
    container_name: be-app
    restart: always
    #env_file: .env
    # environment:
    #   - MONGO_USERNAME=$MONGO_USERNAME
    #   - MONGO_PASSWORD=$MONGO_PASSWORD
    #   - MONGO_HOSTNAME=db
    #   - MONGO_PORT=$MONGO_PORT
    #   - MONGO_DB=$MONGO_DB
    ports:
      - "3011:8080"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
#    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js

  # db:
  #   image: mongo:4.1.8-xenial
  #   container_name: db
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
  #     - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
  #   volumes:
  #     - dbdata:/data/db
  #   networks:
  #     - app-network

  react:
    build:
      context: .
      dockerfile: ../front/whatsapp/dockerfile
    image: fe-app
    container_name: fe-app
    restart: always
    #env_file: .env
    # environment:
    #   - MONGO_USERNAME=$MONGO_USERNAME
    #   - MONGO_PASSWORD=$MONGO_PASSWORD
    #   - MONGO_HOSTNAME=db
    #   - MONGO_PORT=$MONGO_PORT
    #   - MONGO_DB=$MONGO_DB
    ports:
      - "3015:8080"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
#    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js


networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules: